For each release:

 * Fix errors reported by W3C HTML Validator.
 * Fix spelling.

----------------

Split tests into "works for all" with-* etc., and serial line
manipulation; for the latter, why not an echo server?

----------------

Consider adding miscellaneous scsh procedures per
https://srfi-email.schemers.org/srfi-205/msg/14647343/

 * (open-control-tty tty-name [flags])
 * (become-session-leader)
 * (tty-process-group fd/port/fname)
 * (set-tty-process-group fd/port/fname pgrp)
 * (control-tty-file-name)

----------------

HTML: Add examples to Error Handling section.

----------------

Adjustments to what in termios can or should be changeable:

Note Linux will generally be the OS of choice to do embedded
programming with (after Windows) due to tool support, which is
generally for an LTS version of Ubuntu.

See Linux ioctl_tty(2)

Mostly harmless? but not supported in OpenBSD:

HUP in Linux is same as POSIX HUPCL, "Hang up on last close."

----

POSIX defines baud rate B<numbers>, investigate.

RTS/CTS RS-232 flow control is accounted for with a CRTSCTS flag in
asm-generic/termbits.h and x86_64-linux-gnu/bits/termios.h in Linux
and sys/termios.h in OpenBSD

----------------

A note for starting with the Hello World example using a TI MSP430
development board, in this case the MSP-EXP430FR5994, and their free
but not FOSS CCS development suite (GCC is frequently not so good for
embedded work compared to a bespoke compiler):

The out of the box Hello World example code reports this relevant
warning:

"For FRAM devices, at start up, the GPIO power-on default
high-impedance mode needs to be disabled to activate previously
configured port settings. This can be done by clearing the LOCKLPM5
bit in PM5CTL0 register."

Fix this by adding the following to the very beginning of main():

	// Disable the GPIO power-on default high-impedance mode to activate
	// previously configured port settings
	PM5CTL0 &= ~LOCKLPM5;
